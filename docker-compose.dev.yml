services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    environment:
      - GO_ENV=development
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=mysql
      - DB_NAME=db
      - DB_PORT=3306
    networks:
      - app-network
    depends_on:
      - mysql

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    depends_on:
      - api

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    environment:
      SWAGGER_JSON: /api/api-document.yaml
    volumes:
      - ./docs/api-document.yaml:/api/api-document.yaml:ro
    ports:
      - "127.0.0.1:8081:8080"

  mysql:
    image: mysql:8.0.27
    platform: linux/amd64
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: db
      TZ: "Asia/Tokyo"
    volumes:
      - ./mysql/mysql_init:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin
    ports:
      - "3001:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=mysql
    networks:
      - app-network
    depends_on:
      - mysql

volumes:
  db-data:
  node_modules:

networks:
  app-network:
    driver: bridge
